{"version":3,"sources":["Algo/BubbleSort.js","Algo/Quick Sort.js","Algo/SelectionSort.js","Sorter_Gui/Sorter_gui.jsx","App.js","serviceWorker.js","index.js"],"names":["looper","swap","decreter","changed","swappingis","states","finalsorter","arr","i","sortedArray","Array","from","setState","array","length","setTimeout","iterate","state","speed","running","quick_pi","quick_array","quick_swap","a","b","temp","newarray","push","partition","low","high","part_two","j","iiii","pivot","quick","select_Caller","len","under_s_caller","min","tmp","z","SorterGui","props","reset_array","max","Math","floor","random","bubblesort","selection_sort","quicksort","QuickSort","changeSec","val","alert","prompt","parseInt","this","center","textAlign","disabled","onClick","className","map","value","index","style","height","key","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6a0d24b3.chunk.js","sourcesContent":["let looper,swap,decreter,changed=false;\r\nfunction finalsorter(arr,states,i) {\r\n    const sortedArray = Array.from(arr);\r\n    changed=false;\r\n    if (sortedArray[i - 1][0] > sortedArray[i][0]) {\r\n        changed=true;\r\n        sortedArray[i][1]='data_bar data_bar_green';\r\n        sortedArray[i-1][1]='data_bar data_bar_green';\r\n        [sortedArray[i][0], sortedArray[i - 1][0]] = [sortedArray[i - 1][0], sortedArray[i][0]];\r\n        swap = true;\r\n        states.setState({\r\n            array:sortedArray,\r\n        });\r\n    }\r\n    looper++;\r\n    if(looper<sortedArray.length-decreter){\r\n        setTimeout(()=>{\r\n            if(changed){\r\n                sortedArray[i][1]='data_bar data_bar_purple';\r\n                sortedArray[i-1][1]='data_bar data_bar_purple';\r\n            }else{\r\n                sortedArray[i][1]='data_bar data_bar_green';\r\n                sortedArray[i-1][1]='data_bar data_bar_green';\r\n            }\r\n            states.setState({\r\n                array:sortedArray,\r\n                iterate: states.state.iterate+1\r\n            });\r\n            finalsorter(arr,states,looper);\r\n        },states.state.speed);\r\n    }else{\r\n        if(swap){\r\n            swappingis(states)\r\n        }else{\r\n            states.setState({\r\n                running:false\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction swappingis(states){\r\n    looper=1;\r\n    swap=false;\r\n    decreter++;\r\n    finalsorter(states.state.array,states,looper);\r\n}\r\nexport default function BubbleSort (states) {\r\n    states.setState({\r\n        running:true\r\n    });\r\n    looper=1;swap=false;decreter=-1;changed=false;\r\n    swappingis(states);\r\n};","let quick_array=[],quick_pi;\r\nfunction quick_swap(states,a,b){\r\n    let temp=quick_array[a],newarray=[];\r\n    quick_array[a]=quick_array[b];\r\n    quick_array[b]=temp;\r\n    for (let i = 0; i < quick_array.length; i++) {\r\n        if(a===i||b===i){\r\n            newarray.push([quick_array[i],'data_bar data_bar_green']);\r\n        }else{\r\n            newarray.push([quick_array[i],'data_bar data_bar_purple']);\r\n        }\r\n    }\r\n    states.setState({\r\n        array:newarray\r\n    })\r\n}\r\nfunction part_two(j,states,low, high,iiii){\r\n    states.setState({\r\n        iterate:states.state.iterate+2\r\n    });\r\n    let pivot = quick_array[high];\r\n    if(j <= high- 1){\r\n        if (quick_array[j] < pivot) {\r\n            iiii++;\r\n            quick_swap(states,iiii,j);\r\n        }\r\n        setTimeout(()=>{\r\n            part_two(++j,states,low, high,iiii);\r\n        },states.state.speed);\r\n    }else{\r\n        quick_swap(states,iiii+1,high);\r\n        quick_pi=(iiii + 1);\r\n        quick(states,low, quick_pi - 1);\r\n        quick(states,quick_pi + 1, high);\r\n    }\r\n}\r\nfunction partition (states,low, high) {\r\n    part_two(low,states,low,high,(low-1));\r\n}\r\nfunction quick(states,low, high) {\r\n    if (low < high) {\r\n        partition(states,low, high);\r\n    }\r\n}\r\nexport default function Quick_Sort(states) {\r\n    quick_array=[];quick_pi=0;\r\n    for (let i = 0; i < states.state.array.length; i++) {\r\n        quick_array[i]=states.state.array[i][0];\r\n    }\r\n    quick(states,0,quick_array.length-1);\r\n}","function under_s_caller(min,states,i,j,len,array){\r\n    if(j<len){\r\n        if (array[min][0] > array[j][0]) {\r\n            min = j;\r\n            array[j][1]='data_bar data_bar_red';\r\n            array[j][1]='data_bar data_bar_red';\r\n        }else{\r\n            array[j][1]='data_bar data_bar_green';\r\n            array[j][1]='data_bar data_bar_green';\r\n        }\r\n        setTimeout(()=>{\r\n            states.setState({\r\n                iterate:states.state.iterate+1,\r\n                array\r\n            });\r\n            under_s_caller(min,states,i,++j,len,array);\r\n        },states.state.speed);\r\n    }else{\r\n        if (min !== i) {\r\n            let tmp = array[i][0];\r\n            array[i][0] = array[min][0];\r\n            array[min][0] = tmp;\r\n        }\r\n        for (let z=0;z<len;z++){\r\n            array[z][1]='data_bar data_bar_purple';\r\n        }\r\n        setTimeout(()=>{\r\n            states.setState({\r\n                iterate:states.state.iterate+1,\r\n                array\r\n            });\r\n            select_Caller(states,++i,len);\r\n        },states.state.speed);\r\n    }\r\n}\r\n\r\nfunction select_Caller(states,i,len){\r\n    if(i<len){\r\n        let array=states.state.array;\r\n        under_s_caller(i,states,i,i+1,len,array);\r\n    }else{\r\n        setTimeout(()=>{\r\n            states.setState({\r\n                running:false\r\n            });\r\n        },states.state.speed);\r\n    }\r\n}\r\nexport default function SelectionSort(states) {\r\n    states.setState({\r\n        running:true\r\n    });\r\n    select_Caller(states,0,states.state.array.length);\r\n}","import React, {Component} from \"react\";\r\nimport BubbleSort from \"../Algo/BubbleSort\";\r\nimport QuickSort from \"../Algo/Quick Sort\";\r\nimport SelectionSort from \"../Algo/SelectionSort\";\r\n\r\nclass SorterGui extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            array:[],\r\n            iterate:0,\r\n            running: false,\r\n            speed:20\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.reset_array();\r\n    }\r\n    reset_array = () => {\r\n        let array=[],i;\r\n        for(i=0;i<60;i++){\r\n            array.push([getRndInteger(4,500),'data_bar data_bar_purple'])\r\n        }\r\n        this.setState({array:array,iterate:0})\r\n    };\r\n    bubblesort = () => {\r\n        BubbleSort(this);\r\n    };\r\n    selection_sort = () => {\r\n        SelectionSort(this);\r\n    };\r\n    quicksort = () => {\r\n        QuickSort(this);\r\n    };\r\n    changeSec= () => {\r\n        if(this.state.running){\r\n            alert('You can\\'t change speed while sorting is in progress');\r\n            return;\r\n        }\r\n        let val;\r\n        val = prompt(\"Please Enter Speed ( MS )\");\r\n        if(val==\"\"){return;}\r\n        if(val!=parseInt(val)){\r\n            alert('Not a Valid Second');\r\n            return;\r\n        }\r\n        val=parseInt(val);\r\n        if(val<10||val>5000){\r\n            alert('Please enter speed in between 10 to 5000 ( MS )');\r\n            return;\r\n        }\r\n        this.setState({\r\n            speed:val\r\n        })\r\n    };\r\n    render() {\r\n        const center={textAlign:'center'};\r\n        return (\r\n            <div>\r\n                <button disabled={this.state.running} onClick={this.reset_array} className=\"gen_new_array shift_left\">Generate New Array</button>\r\n                <button disabled={this.state.running} onClick={this.bubblesort}  className=\"merge_sort shift_left\">Bubble Sort</button>\r\n                <button disabled={this.state.running} onClick={this.quicksort}  className=\"merge_sort shift_left\">Quick Sort</button>\r\n                <button disabled={this.state.running} onClick={this.selection_sort}  className=\"merge_sort shift_left\">Selection Sort</button>\r\n                <br/> <br/>\r\n                {this.state.array.map((value,index) => (\r\n                    <div className={value[1]} style={{height: `${value[0]}px`}} key={index}>\r\n                    </div>\r\n                ))}\r\n                <h3 style={center}>Iterate ( Comparison ): {this.state.iterate} Times</h3>\r\n                <h3 onClick={this.changeSec} style={center}>Speed: {this.state.speed} MS / Iterate</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSorterGui.propTypes = {};\r\n\r\nfunction getRndInteger(min, max) {\r\n    return Math.floor(Math.random() * (max - min) ) + min;\r\n}\r\n\r\nexport default SorterGui;","import React from 'react';\r\nimport './App.css';\r\nimport SorterGui from \"./Sorter_Gui/Sorter_gui\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SorterGui/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}